name: .NET Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        runtime: [win-x64, linux-x64, linux-arm64, osx-x64, osx-arm64]

    runs-on: ${{ matrix.runtime == 'win-x64' && 'windows-latest' || startsWith(matrix.runtime, 'osx-') && 'macos-latest' || 'ubuntu-latest' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore oChan.sln

    - name: Publish self-contained single-file executable
      run: |
        dotnet publish oChan.sln --configuration Release --output publish-output/${{ matrix.runtime }} -p:PublishSingleFile=true -p:SelfContained=true -r ${{ matrix.runtime }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: oChan-${{ matrix.runtime }}
        path: publish-output/${{ matrix.runtime }}/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v1
      with:
        path: build-artifacts

    - name: Create release assets
      run: |
        mkdir -p release-assets
        cp -r build-artifacts/* release-assets/

    - name: Upload release assets to GitHub
      uses: actions/upload-release-asset@v3
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: release-assets/
        asset_name: oChan-${{ matrix.runtime }}.zip
        label: oChan-${{ matrix.runtime }}
